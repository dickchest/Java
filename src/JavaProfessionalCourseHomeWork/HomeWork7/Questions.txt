1. Что такое Iterator?
Дословно «Iterator» можно перевести как «переборщик». Т.е. некая сущность, способная перебрать все элементы в коллекции.
При этом она позволяет это сделать без вникания во внутреннюю структуру и устройство коллекций.

2. В чем различие Iterator от Iterable?
Iterable - интерфейс, Iterator - метод.
Если какой-либо класс реализует Iterable интерфейс, он получает возможность перебирать объект этого класса, используя Iterator.

3. В чем преимущество Iterator (I) по сравнению с Enumeration (E)?
- Enumeration - устаревший интерфейс (Java 1.0)
Iterator - Java v1.2 - должен быть использоваться предпочтительней
- Enumeration интерфейс используется Vector, HashTable а также Stack классы; итераторы используются для обхода почти каждого класса в Java Collection Framework.
- E - поддерживает операции только READ
- I позволяют вызывающей стороне удалять элементы из базовой коллекции во время итерации (READ & DELETE)
- Enumeration носит отказоустойчивый характер, в то время как Iterator носит безотказный характер.
- E не универсальный, а I - универсальный курсор
- The Iterator имеет более короткие имена методов – hasMore() а также next(), в отличие от hasMoreElements()
а также nextElement() из Enumeration интерфейс.


4. Проверем скорость работы для for/foreach и итератора для этого создать List<Integer>, наполнить его 10 миллионами элементами (используйте рандом)

- перед for объявите переменную int tempVal, внутри тела выполнения for/foreach/выполнения итератора кладите текущую переменную в эту переменную
- перебрать for-each loop
- перебирать с помощью classic for
- classic for, перебираем с конца (i--)
- используя Itertor
- используя ListIterator для всех случаев сделать замер времени результат вывести в консоль (как замерять время можете посмотреть в предыдущей домашке)

напрмиер:
int temp = 0;
for(int i =0;i<list.size();i++) {
temp = list.get(i);
//не надо тут печатать в консоль, это замедляет работу перебора очень сильно, так как 10 млн/ объектов
}
sout(temp);

For each: 32
Classic For: 26
Iterator: 25
ListIterator: 28


5. Напишите свой итератор для перебора элементов в массиве. Проверьте работу используя вызов итератора

Уровень 2

1. Напишите итератор для прохода по всем элементам двумерного массива
- итератор проходит сначала по каждому элементу первой строки
- после проходит по каждому элементу второй строки и там до конца

2. Представьте что за столом сидят n игроков и имеется диллер который раздает карты по кругу (колода у нас бесконечна).
Чтобы достичь этого напишите бесконечный кольцевой итератор - как только мы дошли до последнего значения мы
переключаемся на первый элемент