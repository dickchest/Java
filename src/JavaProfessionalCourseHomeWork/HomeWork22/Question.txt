Уровень 1

1. Что такое Stream?
это механизм ввода-вывода данных, который позволяет читать и записывать данные в поток (stream) по мере их поступления.
поток байтов

2. Что входит в пакет IO?
В пакет java.io входят классы и интерфейсы, которые предоставляют различные средства для ввода-вывода данных в Java. Некоторые из основных классов и интерфейсов пакета java.io включают:
- InputStream и OutputStream: байтовые потоки ввода-вывода, которые позволяют читать и записывать данные в виде байтов.
- Reader и Writer: символьные потоки ввода-вывода, которые позволяют читать и записывать данные в виде символов.
- File: класс для работы с файлами на диске.
- BufferedReader и BufferedWriter: классы, которые позволяют эффективно читать и записывать данные из потоков в память.
- InputStreamReader и OutputStreamWriter: классы, которые преобразуют байтовые потоки в символьные потоки и наоборот.
- DataInputStream и DataOutputStream: классы, которые позволяют читать и записывать примитивные типы данных (int, double, boolean и т.д.) в байтовые потоки.
- RandomAccessFile: класс, который позволяет читать и записывать данные в файлы в произвольном порядке.

3. Можно ли изменить поток входа/выхода для System.in/out/err, если да, то как?
с помощью методов System.setIn(), System.setOut(), и System.setErr()

4. Что позволяет делать класс File?
работать с файлами и директориями:
- Создание, чтение и запись файлов.
- Управление директориями.
- Получение информации.
- Проверка наличия и доступности файлов.
- Изменение прав доступа к файлам.
- Работа с временными файлами.
- Работа с путями файлов.

5. Почему появился Path?
Path был создан для улучшения и упрощения работы с файлами и директориями в Java, и он предоставляет более современный и удобный подход к этой задаче. Он был создан для предоставления удобного и эффективного способа работы с файлами и директориями в операционной системе (возможность работы с длинными именами файлов, поддержка различных кодировок, возможность создания символических ссылок и т.д).

6. Какая есть особенность при работе с файлами? (Что нужно учитывать всегда при работе с файлами)
Всегда нужно учитывать возможность выбрасывания ошибок, которые обязательно нужно обрабатывать. Также нужно учитывать то, что нужно обязательно закрывать стрим.

7. Напишите программу, которая будет создавать и писать в файл какое-нибудь стихотворение

8. Напишите программу, которая будет считывать файл (скачайте файл результаты матчей)
Match(year, month, day, firstTeam, firstTeamCount, secondTeamCount, secondTeam, watchers, stadium)
Там где значения строки NULL - заведите специальную переменную строку String NULL_VALUE = "NULL";она должна быть константой
Там где значения NULL не заполняйте соответствующие поля матчей
Необходимо создать файл FC Augsburg.txt с результатами матча этой команды
записать в файл все матчи проходившие на Mercedes-Benz Arena
записать в файл winners.txt победителя каждого матча, если ничья, то так и писать ничья
Задачка со звездочкой - вывести файл table.txt информацию какая команда сколько забила мячей

Уровень 2
Напишите свой терминал в самом начале нужно ввести имя папки куда нужно попасть, терминал должен поддерживать следующие команды:
cd
cd .. - перейти к родителю
cd <имя папки> - перейти в папку
ls
ls - распечатать содержимое текущей папки
ls test - распечатать содержимое папки test(которая находится внутри этой папки)
mkdir
mkdir test - создаст папку test
nano
nano test.txt - создаст файл test.txt
rm <file/folder name> - удалить файл
pwd - возвращает абсолютный путь текущей папки Создайте 2 папки(test1, test2), провалитесь в одну из них напишите текущую папку, создайте там 2 файла и 1 папку, распечатайте содержимое папки перейдите в родительскую папку и распечатайте содержимое папки test1, удалите папку test1 и test2
Задачи доп уровня(необязательно их делать, но было бы круто реализовать)
mv <from> <to> - переместить (либо переименовать) файл
ls -la - распечатать с правами доступа (hrwx )
r- можно читать
w- можно писать
x -можно выполнять
h - если скрытый
chmod <mode> <filename> - дать права файлу (не будем делать как в линуксе с числами от 0 до 7 - там логики чуть больше), сделаем проще
r- можно читать
w- можно писать
x -можно выполнять
h - если скрытый