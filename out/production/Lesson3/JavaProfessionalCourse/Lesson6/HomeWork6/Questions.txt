Level 1
1. Что такое Set/List/Queue и для чего они нужны?
Это линейные динамические типы данных. Для хранения упорядоченных линейных данных. Это коллекции

2. Что находится под капотом LinkedList?
2 интерфейса - List & Deque. состоит из последовательности узлов, содержащие ссылки на предыдущий и следующий элементы,
предназначенные для хранения обектов определенного при создании типа.

3. Что гарантирует Set? Что не гарантирует?
Один и тот же элемент не может встерчаться в сете 2 раза. Все элементы уникальны. Порядок вставки не важен.
Не гарантирует сортировку. Не имеет гарантированного внутреннего порядка. Нет доступа по индексу

4. Что не гарантирует List? Что гарантирует?
Не гарантирует уникальность элементов. Могут быть дубликаты
Гарантирует внутренний порядок и могут быть повторены в этом порядке. Может быть отсортировано. Есть доступ по индексу

5. Напишите метод, который добавляет 1000000 элементов в ArrayList и LinkedList. Напишите еще один метод, который выбирает из заполненного списка элемент наугад 100000 раз. Замерьте время, которое потрачено на это. Сравните результаты и предположите, почему они именно такие. Как замерить время:
    long before = System.currentTimeMillis();
    //здесь написать код выполнения
	long after = System.currentTimeMillis();
	System.out.println(after - before);

	Результат
	ArrayList: 19
    linkedList: 127861
    Это происходит потому, что линкт лист получает доступ к элементу перебирая последовательно все эелементы.

6. Попробуйте реализовать алгоритм бинарного поиска описанного на последнем слайде

7. Введите с клавиатуры в List пять значений Integer. Выведите их в одну строку через запятую. Получите для List среднее арифметическое.

8. Напишите метод sort который будет сортировать List методом пузырька

Level 2
1. Дан List названий товаров, выпускаемых заводом. Определите, повторяется ли в этом Lis название первого товара, и, если повторяется, удалите все названия первого товара из List.
2. Задан список фамилий брокеров товарной биржи из N человек. Поменяйте местами фамилии брокеров: первого и последнего, второго и предпоследнего, третьего от начала и третьего от конца и т.д.
3. Составьте программу, облегчающую работу секретаря. Создайте объект Person с двумя параметрами имя, фамилия и номер телефона. Создайте List и заполните его объектами Person. Напишите программу, которая будет искать номера телефонов по введенной фамилии. Например в листе <Пупкин Вася 987654 >,<Пупкин Петя 987987>,<Пенков Вася 123456> при поиске по Пупкин результатом будет List : <987654>,<987987>